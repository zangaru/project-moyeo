<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moyeo.mapper.ReviewMapper">
	
	<!-- 후기 등록 -->
	<insert id="insertReview">
	    <selectKey resultType="int" keyProperty="reviewIdx" order="BEFORE">
	        SELECT review_seq.nextval FROM dual 
	    </selectKey>
	    INSERT INTO review 
	    (
	        review_idx,
	        userinfo_id,
	        orders_idx,
	        review_star,
	        pack_title,
	        review_title,
	        review_img,
	        review_content,
	        review_regdate
	    )
	    VALUES(
	        #{reviewIdx}
	        , #{userinfoId}
	        , #{ordersIdx} 
	        , #{reviewStar}
	        , #{packTitle}
	        , #{reviewTitle}
	        , #{reviewImg}
	        , #{reviewContent}
	        , sysdate
	    )
	</insert>
	
	<!-- 후기 업데이트 -->
	<update id="updateReview">
		UPDATE review SET 
		    review_star=#{reviewStar} 
		    , review_title=#{reviewTitle}
		    <if test="reviewImg != null and reviewImg !=''">, review_img=#{reviewImg}</if>
		    , review_content=#{reviewContent} 
		    WHERE review_idx=#{reviewIdx}
	</update>
	
	<!-- 후기 삭제 -->
	<delete id="deleteReview">
	    DELETE FROM review WHERE review_idx=#{reviewIdx}
	</delete>

	<!-- 후기 조회수 증가 -->
	<update id="viewcntReview" parameterType="int">
	    UPDATE review
	    SET review_viewcnt = review_viewcnt + 1
	    WHERE review_idx = #{reviewIdx}
	</update>
	
	<!-- 글번호로 하나의 게시글 검색 -->
	<select id="selectReviewByIdx" resultType="Review">
		SELECT 
			review_idx
			, userinfo_id
			, orders_idx
			, review_star
			, pack_title
			, review_title
			, review_img
			, review_content
			, review_regdate
			, review_viewcnt
		FROM review 
		WHERE review_idx=#{reviewIdx}
	</select>
	
	<!-- 페이징처리를 위한 카운트, 검색기능 -->
	<select id="selectReviewCount" resultType="int">
		SELECT COUNT(*) FROM review 
		<if test="keyword != null and keyword != ''">
			<bind name="word" value="'%'+keyword+'%'"/>
			where ${column} like #{word}
		</if>
	</select>	
		
	<!-- 게시글 목록검색, 검색기능 -->
	<select id="selectReviewList" resultType="Review">
		select * from (select rownum rn, review.* from (select 
			review_idx
	        , userinfo_id
	        , orders_idx
	        , review_star
	        , pack_title
	        , review_title
	        , review_img
	        , review_content
	        , review_regdate
	        , review_viewcnt from review

		<if test="keyword != null and keyword != ''">
			<bind name="word" value="'%'+keyword+'%'"/>
			where ${column} like #{word}
			</if>
		order by review_idx desc) review) where rn between #{startRow} and #{endRow}
	</select>
	 
	<!-- 패키지 테이블에서 모든 패키지 제목을 가져오는 메서드 -->
	<select id="getAllPackageTitles" resultType="String">
	    SELECT PACK_TITLE FROM pack
	</select>
	
	<!-- 최신 리뷰 가져오기-->
	<select id="selectLatestReviews" resultType="Review">
	SELECT *
		FROM (
		    SELECT *
		    FROM review
		    ORDER BY review_regdate DESC
		)
		WHERE ROWNUM &lt;= #{count}
	</select>


	
	<!-- userinfo-details -->
	<select id="selectMyReviewCount" resultType="int">
		SELECT
			COUNT(*) AS review_count
		FROM review
		WHERE userinfo_id = #{userinfoId}
	</select>
	
	<!-- Review 목록 조회 -->
    <select id="selectMyReviewList" resultType="Review">
        SELECT * FROM (
          SELECT ROWNUM RN, BOARD.* FROM (
          	SELECT
				review_idx
			        , userinfo_id
			        , orders_idx
			        , pack_title
			        , review_star
			        , review_title
			        , review_content
			        , review_regdate
			        , review_viewcnt
            FROM review 
            WHERE userinfo_id = #{userinfoId}
            ORDER BY review_idx DESC
          ) BOARD
      ) WHERE RN BETWEEN #{startRow} and #{endRow}<!-- 페이징 처리 -->
    </select>
    
    <!-- 마이페이지 -->
    <!-- 유저별 Review 목록 조회 - 페이징 X -->
	<select id="selectUserReviewListById" resultType="Review">
		SELECT
			review_idx
			, userinfo_id
			, orders_idx
			, review_star
			, review_title
			, review_content
			, review_regdate
			, review_viewcnt
        FROM review 
		WHERE userinfo_id = #{userinfoId}
        ORDER BY review_idx DESC
    </select>
</mapper>
